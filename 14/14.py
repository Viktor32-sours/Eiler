#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Следующая повторяющаяся последовательность определена для множества натуральных чисел:

n → n/2 (n - четное)
n → 3n + 1 (n - нечетное)

Используя описанное выше правило и начиная с 13, сгенерируется следующая последовательность:

13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
Получившаяся последовательность (начиная с 13 и заканчивая 1) содержит 10 элементов. 
Хотя это до сих пор и не доказано (проблема Коллатца (Collatz)), 
предполагается, что все сгенерированные таким образом последовательности оканчиваются на 1.

Какой начальный элемент меньше миллиона генерирует самую длинную последовательность?

Примечание: Следующие за первым элементы последовательности могут быть больше миллиона.
Ответ: 837799 (длина последовательности: 525)
"""
n = int(input('Введите начальное значение(1000000): '))

def colatz(n):
	spis = []
	spis.append(n)
	while n != 1:
		if n % 2 == 0:
			n = int(n/2)
			spis.append(n)
		else:
			n = int(3*n + 1)
			spis.append(n)
			
	return spis
	
max_len = 0
max_spis = []

for i in range(2,n+1):
	a = colatz(i)
	c = len(a)
	if c > max_len:
		max_len = c
		d = {c:a} # создаем dict d
print('Макс длина списка ', max_len)
print(d)
# print(colatz(13))	




# if __name__ == '__main__':
	
    # print(main(n))
