"""
Задача 27
Квадратичные простые числа
Эйлер опубликовал свою замечательную квадратичную формулу:

n^2+n+41
Оказалось, что согласно данной формуле можно получить 40 простых чисел, последовательно подставляя значения 0 ≤ n ≤ 39. Однако, при n=40, 40^2+40+41=40(40+1)+41 делится на 41 без остатка, и, очевидно, при n=41,41^2+41+41 делится на 41 без остатка.

При помощи компьютеров была найдена невероятная формула n^2−79n+1601, согласно которой можно получить 80 простых чисел для последовательных значений n от 0 до 79. Произведение коэффициентов −79 и 1601 равно −126479.

Рассмотрим квадратичную формулу вида:

n^2+an+b, где |a|<1000 и |b|≤1000

где |n| является модулем (абсолютным значением) n.
К примеру, |11|=11 и |−4|=4
Найдите произведение коэффициентов a и b квадратичного выражения, согласно которому можно получить максимальное количество простых чисел для последовательных значений n, начиная со значения n=0.
Ответ: -59231
"""
import math

def is_prime(n):
    if n == 2:
        return True
    if n % 2 == 0 or n <= 1:
        return False
    sqr = int(math.sqrt(n)) + 1
    for d in range(3, sqr, 2):
        if n % d == 0:
            return False
    return True

def result(a,b):
    n = 0
    r_list = []
    while True:
        r = n*n + a*n + b
        if is_prime(r):
            r_list.append(r)
            n+=1
            continue
        else:
            break
    return(len(r_list))

def main():
    list_b = set()
    for b in range(1000):
        if is_prime(b):
            list_b.add(b)
    
    max_l = 0
    dic = {}
    for a in range(-1000,1000):
        for b in list_b:
            tmp_res = result(a,b)
            if tmp_res > max_l:
                max_l = tmp_res
                dic = {
                    'a':a,
                    'b':b,
                    'a x b':a*b,
                    'len':max_l
                }
    print(dic)
   
if __name__ == "__main__":
    main()